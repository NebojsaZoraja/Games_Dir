{"version":3,"sources":["constatns/gameConstatns.js","constatns/userConstants.js","constatns/cartConstants.js","constatns/orderConstants.js","reducers/orderReducers.js","constatns/genreConstants.js","store.js","reducers/gameReducers.js","reducers/genreReducers.js","reducers/userReducers.js","reducers/cartReducers.js","components/Footer.jsx","actions/userActions.js","actions/cartActions.js","components/SearchBox.jsx","components/Header.jsx","components/Meta.jsx","components/Rating.jsx","components/Game.jsx","components/Loader.jsx","components/Message.jsx","actions/gameActions.js","screens/HomeScreen.jsx","screens/GameScreen.jsx","screens/LoginScreen.jsx","screens/RegisterScreen.jsx","components/Paginate.jsx","screens/ProfileScreen.jsx","actions/orderActions.js","components/CheckoutSteps.jsx","screens/OverviewScreen.jsx","screens/EmptyCartScreen.jsx","screens/PaymentScreen.jsx","screens/PlaceOrderScreen.jsx","screens/OrderScreen.jsx","screens/UserListScreen.jsx","screens/UserEditScreen.jsx","screens/GameListScreen.jsx","screens/GameEditScreen.jsx","screens/AllGamesScreen.jsx","components/ScrollToTop.jsx","screens/GameSearch.jsx","screens/GenresListScreen.jsx","actions/genreActions.js","screens/GenreEditScreen.jsx","screens/NotFoundScreen.jsx","App.js","reportWebVitals.js","index.js"],"names":["GAME_LIST_REQUEST","GAME_LIST_SUCCESS","GAME_LIST_FAIL","GAME_DETAILS_REQUEST","GAME_DETAILS_SUCCESS","GAME_DETAILS_FAIL","GAME_DELETE_REQUEST","GAME_DELETE_SUCCESS","GAME_DELETE_FAIL","GAME_CREATE_REQUEST","GAME_CREATE_SUCCESS","GAME_CREATE_FAIL","GAME_CREATE_RESET","GAME_GENRE_REQUEST","GAME_GENRE_SUCCESS","GAME_GENRE_FAIL","GAME_GENRE_RESET","GAME_UPDATE_REQUEST","GAME_UPDATE_SUCCESS","GAME_UPDATE_FAIL","GAME_UPDATE_RESET","GAME_CREATE_REVIEW_REQUEST","GAME_CREATE_REVIEW_SUCCESS","GAME_CREATE_REVIEW_FAIL","GAME_CREATE_REVIEW_RESET","GAME_LIST_ADMIN_REQUEST","GAME_LIST_ADMIN_SUCCESS","GAME_LIST_ADMIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_AUTO_LOGOUT_INIT","USER_AUTO_LOGOUT_SUCCESS","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_PAYMENT_METHOD","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","orderCreateDefaultState","GENRE_LIST_REQUEST","GENRE_LIST_SUCCESS","GENRE_LIST_FAIL","GENRE_LIST_RESET","GENRE_CREATE_REQUEST","GENRE_CREATE_SUCCESS","GENRE_CREATE_FAIL","GENRE_CREATE_RESET","GENRE_UPDATE_REQUEST","GENRE_UPDATE_SUCCESS","GENRE_UPDATE_FAIL","GENRE_UPDATE_RESET","GENRE_DETAILS_REQUEST","GENRE_DETAILS_SUCCESS","GENRE_DETAILS_FAIL","GENRE_DELETE_REQUEST","GENRE_DELETE_SUCCESS","GENRE_DELETE_FAIL","reducer","combineReducers","gameList","state","games","action","type","loading","payload","error","gameListAdmin","pages","page","gameDetails","game","gameDelete","success","gameGenres","genres","gameCreate","gameUpdate","gameReviewCreate","genresList","genreCreate","genre","genreUpdate","genreDetails","genreDelete","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","cart","cartItem","item","existItem","paymentMethod","orderCreate","order","orderDetails","orderItem","orderPay","orderListMy","orders","userInfoFromStorage","sessionStorage","getItem","JSON","parse","initialState","localStorage","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","Container","Row","Col","className","logout","dispatch","removeItem","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","response","message","removeFromCart","stringify","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","Control","name","onChange","target","value","placeholder","Button","variant","withRouter","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","to","Brand","src","width","height","alt","Toggle","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","style","color","Meta","description","Helmet","content","defaultProps","Rating","text","Game","Card","_id","textDecoration","Img","image","Body","Title","as","textAlign","Text","rating","numReviews","Loader","Spinner","animation","role","margin","display","Message","children","Alert","listGames","listGameDetails","getGameGenres","HomeScreen","match","responsive","superLargeDesktop","breakpoint","max","min","items","slidesToSlide","desktop","tablet","mobile","useEffect","xs","Carousel","map","price","Image","fluid","borderTop","borderWidth","renderButtonGroupOutside","infinite","GameScreen","setRating","comment","setComment","minReq","setMinReq","recReq","setRecReq","successGameReview","errorGameReview","alert","minRequirements","toString","split","recRequirements","params","goBack","md","lg","sm","ListGroup","borderBottom","numberInStock","backgroundColor","borderColor","disabled","publisher","whiteSpace","borderRight","requirement","reviews","length","review","createdAt","substring","gameId","post","Group","controlId","Label","Select","border","LoginScreen","location","email","setEmail","password","setPassword","redirect","search","setItem","login","setTimeout","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","Paginate","Pagination","Array","keys","x","active","ProfileScreen","pageNumber","loadingOrders","errorOrders","listmyOrders","put","updateUserProfile","Table","striped","borderless","hover","cursor","totalPrice","updatedAt","CheckoutSteps","step1","step2","step3","step4","OverviewScreen","replace","EmptyCartScreen","PaymentScreen","setPaymentMethod","Check","label","checked","taget","PlaceOrderScreen","createOrder","OrderScreen","open","setOpen","sdkReady","setSdkReady","orderId","loadingPay","successPay","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","isPaid","window","paypal","in","Dropdown","Header","productKey","amount","onSuccess","paymentResult","payOrder","UserListScreen","successDelete","listUsers","deleteHandler","confirm","delete","deleteUser","href","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","GameListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdGame","listGamesAdmin","deleteGame","GameEditScreen","setTitle","setPrice","setImage","setGenre","setPublisher","setNumberInStock","setDescription","setMinRequirements","setRecRequirements","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","console","updateGame","g","custom","size","AllGamesScreen","useDynamicRefs","getRef","setRef","executeScroll","ref","scrollTo","current","offsetTop","scrollToRef","horizontal","fontSize","fontWeight","ScrollToTop","props","useLocation","GameSearch","GenresList","createdGenre","deleteGenre","GenreEditScreen","genreId","updateGenre","NotFoundScreen","App","path","component","exact","GenresListScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1cd6f408.chunk.js","sourcesContent":["export const GAME_LIST_REQUEST = 'GAME_LIST_REQUEST';\r\nexport const GAME_LIST_SUCCESS = 'GAME_LIST_SUCCESS';\r\nexport const GAME_LIST_FAIL = 'GAME_LIST_FAIL';\r\n\r\nexport const GAME_DETAILS_REQUEST = 'GAME_DETAILS_REQUEST';\r\nexport const GAME_DETAILS_SUCCESS = 'GAME_DETAILS_SUCCESS';\r\nexport const GAME_DETAILS_FAIL = 'GAME_DETAILS_FAIL';\r\n\r\nexport const GAME_DELETE_REQUEST = 'GAME_DELETE_REQUEST';\r\nexport const GAME_DELETE_SUCCESS = 'GAME_DELETE_SUCCESS';\r\nexport const GAME_DELETE_FAIL = 'GAME_DELETE_FAIL';\r\n\r\nexport const GAME_CREATE_REQUEST = 'GAME_CREATE_REQUEST';\r\nexport const GAME_CREATE_SUCCESS = 'GAME_CREATE_SUCCESS';\r\nexport const GAME_CREATE_FAIL = 'GAME_CREATE_FAIL';\r\nexport const GAME_CREATE_RESET = 'GAME_CREATE_RESET';\r\n\r\nexport const GAME_GENRE_REQUEST = 'GAME_GENRE_REQUEST';\r\nexport const GAME_GENRE_SUCCESS = 'GAME_GENRE_SUCCESS';\r\nexport const GAME_GENRE_FAIL = 'GAME_GENRE_FAIL';\r\nexport const GAME_GENRE_RESET = 'GAME_GENRE_RESET';\r\n\r\nexport const GAME_UPDATE_REQUEST = 'GAME_UPDATE_REQUEST';\r\nexport const GAME_UPDATE_SUCCESS = 'GAME_UPDATE_SUCCESS';\r\nexport const GAME_UPDATE_FAIL = 'GAME_UPDATE_FAIL';\r\nexport const GAME_UPDATE_RESET = 'GAME_UPDATE_RESET';\r\n\r\nexport const GAME_CREATE_REVIEW_REQUEST = 'GAME_CREATE_REVIEW_REQUEST';\r\nexport const GAME_CREATE_REVIEW_SUCCESS = 'GAME_CREATE_REVIEW_SUCCESS';\r\nexport const GAME_CREATE_REVIEW_FAIL = 'GAME_CREATE_REVIEW_FAIL';\r\nexport const GAME_CREATE_REVIEW_RESET = 'GAME_CREATE_REVIEW_RESET';\r\n\r\nexport const GAME_LIST_ADMIN_REQUEST = 'GAME_LIST_ADMIN_REQUEST';\r\nexport const GAME_LIST_ADMIN_SUCCESS = 'GAME_LIST_ADMIN_SUCCESS';\r\nexport const GAME_LIST_ADMIN_FAIL = 'GAME_LIST_ADMIN_FAIL';\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\nexport const USER_AUTO_LOGOUT_INIT = \"USER_AUTO_LOGOUT_INIT\";\r\nexport const USER_AUTO_LOGOUT_SUCCESS = \"USER_AUTO_LOGOUT_SUCCESS\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\r\n\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';","import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_RESET, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_RESET, ORDER_PAY_SUCCESS, ORDER_CREATE_RESET } from '../constatns/orderConstants'\r\n\r\nconst orderCreateDefaultState = {};\r\n\r\nexport const orderCreateReducer = (state = orderCreateDefaultState, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_CREATE_RESET:\r\n            return { orderCreateDefaultState }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItem: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = { orderItem: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return { state }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload.orders,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page,\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const GENRE_LIST_REQUEST = 'GENRE_LIST_REQUEST';\r\nexport const GENRE_LIST_SUCCESS = 'GENRE_LIST_SUCCESS';\r\nexport const GENRE_LIST_FAIL = 'GENRE_LIST_FAIL';\r\nexport const GENRE_LIST_RESET = 'GENRE_LIST_RESET';\r\n\r\nexport const GENRE_CREATE_REQUEST = 'GENRE_CREATE_REQUEST';\r\nexport const GENRE_CREATE_SUCCESS = 'GENRE_CREATE_SUCCESS';\r\nexport const GENRE_CREATE_FAIL = 'GENRE_CREATE_FAIL';\r\nexport const GENRE_CREATE_RESET = 'GENRE_CREATE_RESET';\r\n\r\nexport const GENRE_UPDATE_REQUEST = 'GENRE_UPDATE_REQUEST';\r\nexport const GENRE_UPDATE_SUCCESS = 'GENRE_UPDATE_SUCCESS';\r\nexport const GENRE_UPDATE_FAIL = 'GENRE_UPDATE_FAIL';\r\nexport const GENRE_UPDATE_RESET = 'GENRE_UPDATE_RESET';\r\n\r\nexport const GENRE_DETAILS_REQUEST = 'GENRE_DETAILS_REQUEST';\r\nexport const GENRE_DETAILS_SUCCESS = 'GENRE_DETAILS_SUCCESS';\r\nexport const GENRE_DETAILS_FAIL = 'GENRE_DETAILS_FAIL';\r\n\r\nexport const GENRE_DELETE_REQUEST = 'GENRE_DELETE_REQUEST';\r\nexport const GENRE_DELETE_SUCCESS = 'GENRE_DELETE_SUCCESS';\r\nexport const GENRE_DELETE_FAIL = 'GENRE_DELETE_FAIL';\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { gameCreateReducer, gameDeleteReducer, gameDetailsReducer, gameGenresReducer, gameListAdminReducer, gameListReducer, gameReviewCreateReducer, gameUpdateReducer } from './reducers/gameReducers'\r\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer } from './reducers/orderReducers';\r\nimport { genresListReducer, genreCreateReducer, genreUpdateReducer, genreDetailsReducer, genreDeleteReducer } from './reducers/genreReducers';\r\n\r\nconst reducer = combineReducers({\r\n    gameList: gameListReducer,\r\n    gameListAdmin: gameListAdminReducer,\r\n    gameDetails: gameDetailsReducer,\r\n    gameDelete: gameDeleteReducer,\r\n    gameGenres: gameGenresReducer,\r\n    gameCreate: gameCreateReducer,\r\n    gameUpdate: gameUpdateReducer,\r\n    gameReviewCreate: gameReviewCreateReducer,\r\n    genresList: genresListReducer,\r\n    genreCreate: genreCreateReducer,\r\n    genreUpdate: genreUpdateReducer,\r\n    genreDetails: genreDetailsReducer,\r\n    genreDelete: genreDeleteReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    cart: cartReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n\r\n});\r\n\r\nconst userInfoFromStorage = sessionStorage.getItem('userInfo')\r\n    ? JSON.parse(sessionStorage.getItem('userInfo'))\r\n    : null\r\n\r\nconst cartItemFromStorage = localStorage.getItem('cartItem') ? JSON.parse(localStorage.getItem('cartItem')) : {};\r\n\r\nconst initialState = {\r\n    cart: { cartItem: cartItemFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import { GAME_LIST_SUCCESS, GAME_LIST_REQUEST, GAME_DETAILS_REQUEST, GAME_DETAILS_SUCCESS, GAME_DETAILS_FAIL, GAME_DELETE_REQUEST, GAME_DELETE_SUCCESS, GAME_DELETE_FAIL, GAME_GENRE_REQUEST, GAME_GENRE_SUCCESS, GAME_GENRE_FAIL, GAME_CREATE_REQUEST, GAME_CREATE_SUCCESS, GAME_CREATE_FAIL, GAME_CREATE_RESET, GAME_GENRE_RESET, GAME_UPDATE_REQUEST, GAME_UPDATE_SUCCESS, GAME_UPDATE_FAIL, GAME_UPDATE_RESET, GAME_CREATE_REVIEW_REQUEST, GAME_CREATE_REVIEW_SUCCESS, GAME_CREATE_REVIEW_FAIL, GAME_CREATE_REVIEW_RESET, GAME_LIST_ADMIN_REQUEST, GAME_LIST_ADMIN_SUCCESS, GAME_LIST_ADMIN_FAIL, GAME_LIST_FAIL } from '../constatns/gameConstatns'\r\n\r\nexport const gameListAdminReducer = (state = { games: [] }, action) => {\r\n    switch (action.type) {\r\n        case GAME_LIST_ADMIN_REQUEST:\r\n            return { loading: true, games: [] }\r\n        case GAME_LIST_ADMIN_SUCCESS:\r\n            return { loading: false, games: action.payload.games, pages: action.payload.pages, page: action.payload.page }\r\n        case GAME_LIST_ADMIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const gameListReducer = (state = { games: [] }, action) => {\r\n    switch (action.type) {\r\n        case GAME_LIST_REQUEST:\r\n            return { loading: true, games: [] }\r\n        case GAME_LIST_SUCCESS:\r\n            return { loading: false, games: action.payload }\r\n        case GAME_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const gameDetailsReducer = (state = { loading: true, game: {} }, action) => {\r\n    switch (action.type) {\r\n        case GAME_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case GAME_DETAILS_SUCCESS:\r\n            return { loading: false, game: action.payload }\r\n        case GAME_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const gameDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GAME_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case GAME_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case GAME_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const gameGenresReducer = (state = { genres: [] }, action) => {\r\n    switch (action.type) {\r\n        case GAME_GENRE_REQUEST:\r\n            return { loading: true, genres: [] }\r\n        case GAME_GENRE_SUCCESS:\r\n            return { loading: false, genres: action.payload }\r\n        case GAME_GENRE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case GAME_GENRE_RESET:\r\n            return { genres: [] }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const gameCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GAME_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case GAME_CREATE_SUCCESS:\r\n            return { loading: false, success: true, game: action.payload }\r\n        case GAME_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case GAME_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const gameUpdateReducer = (state = { game: {} }, action) => {\r\n    switch (action.type) {\r\n        case GAME_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case GAME_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, game: action.payload }\r\n        case GAME_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case GAME_UPDATE_RESET:\r\n            return { game: {} }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const gameReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GAME_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case GAME_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n        case GAME_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case GAME_CREATE_REVIEW_RESET:\r\n            return { game: {} }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GENRE_CREATE_FAIL, GENRE_CREATE_REQUEST, GENRE_CREATE_RESET, GENRE_CREATE_SUCCESS, GENRE_DELETE_FAIL, GENRE_DELETE_REQUEST, GENRE_DELETE_SUCCESS, GENRE_DETAILS_FAIL, GENRE_DETAILS_REQUEST, GENRE_DETAILS_SUCCESS, GENRE_LIST_FAIL, GENRE_LIST_REQUEST, GENRE_LIST_RESET, GENRE_LIST_SUCCESS, GENRE_UPDATE_FAIL, GENRE_UPDATE_REQUEST, GENRE_UPDATE_RESET, GENRE_UPDATE_SUCCESS } from \"../constatns/genreConstants\"\r\n\r\nexport const genresListReducer = (state = { genres: [] }, action) => {\r\n    switch (action.type) {\r\n        case GENRE_LIST_REQUEST:\r\n            return { loading: true, genres: [] }\r\n        case GENRE_LIST_SUCCESS:\r\n            return { loading: false, genres: action.payload }\r\n        case GENRE_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case GENRE_LIST_RESET:\r\n            return { genres: [] }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const genreCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GENRE_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case GENRE_CREATE_SUCCESS:\r\n            return { loading: false, success: true, genre: action.payload }\r\n        case GENRE_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case GENRE_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const genreUpdateReducer = (state = { genre: {} }, action) => {\r\n    switch (action.type) {\r\n        case GENRE_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case GENRE_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, genre: action.payload }\r\n        case GENRE_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case GENRE_UPDATE_RESET:\r\n            return { genre: {} }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const genreDetailsReducer = (state = { loading: true, genre: {} }, action) => {\r\n    switch (action.type) {\r\n        case GENRE_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case GENRE_DETAILS_SUCCESS:\r\n            return { loading: false, genre: action.payload }\r\n        case GENRE_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const genreDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GENRE_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case GENRE_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case GENRE_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { USER_AUTO_LOGOUT_INIT, USER_AUTO_LOGOUT_SUCCESS, USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_RESET, USER_UPDATE_SUCCESS } from \"../constatns/userConstants\";\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        case USER_AUTO_LOGOUT_INIT:\r\n            return {}\r\n        case USER_AUTO_LOGOUT_SUCCESS:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload.users, pages: action.payload.pages, page: action.payload.page }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD } from '../constatns/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItem: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n\r\n            const existItem = state.cartItem;\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItem: state.cartItem === existItem ? item : state.cartItem,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItem: item\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItem: {}\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy; Games-Dir</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import axios from \"axios\"\r\nimport { ORDER_LIST_MY_RESET } from \"../constatns/orderConstants\"\r\nimport { USER_AUTO_LOGOUT_INIT, USER_AUTO_LOGOUT_SUCCESS, USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../constatns/userConstants\"\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config);\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        sessionStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    sessionStorage.removeItem('userInfo');\r\n    dispatch({\r\n        type: USER_LOGOUT,\r\n    })\r\n    dispatch({\r\n        type: USER_DETAILS_RESET,\r\n    })\r\n    dispatch({\r\n        type: ORDER_LIST_MY_RESET,\r\n    })\r\n\r\n}\r\n\r\nexport const autoLogout = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_AUTO_LOGOUT_INIT,\r\n    })\r\n    setTimeout(() => {\r\n        dispatch(logout());\r\n        dispatch({\r\n            type: USER_AUTO_LOGOUT_SUCCESS,\r\n        })\r\n    }, 3600000);\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/', { name, email, password }, config);\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        sessionStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n        sessionStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = (pageNumber = '') => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users?pageNumber=${pageNumber}`, config);\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/ api / users / ${id}`, config);\r\n\r\n        dispatch({ type: USER_DELETE_SUCCESS, })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/ api / users / ${user._id}`, user, config);\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS, })\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import axios from 'axios';\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD } from '../constatns/cartConstants';\r\n\r\nexport const addToCart = (id) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/games/${id}`);\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            game: data._id,\r\n            title: data.title,\r\n            image: data.image,\r\n            price: data.price,\r\n            numberInStock: data.numberInStock\r\n        }\r\n    });\r\n\r\n    localStorage.setItem('cartItem', JSON.stringify(getState().cart.cartItem));\r\n}\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    });\r\n    localStorage.removeItem('cartItem', JSON.stringify(getState().cart.cartItem));\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    });\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n}","import React, { useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/games/search/${keyword}`);\r\n    } else {\r\n      history.push(\"/games\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} className=\"d-flex mx-lg-3\">\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"q\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder=\"Search...\"\r\n        className=\"mr-sm-2 ml-sm-5\"\r\n      ></Form.Control>\r\n      <Button type=\"submit\" variant=\"outline-success\" className=\"btn-md mx-1\">\r\n        <i className=\"fas fa-search\"></i>\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { removeFromCart } from \"../actions/cartActions\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nconst Header = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItem } = cart;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    dispatch(removeFromCart(cartItem.game));\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>\r\n              <img\r\n                src=\"/logo.png\"\r\n                width=\"40\"\r\n                height=\"40\"\r\n                className=\"d-inline-block align-center mx-1\"\r\n                alt=\"Games Dir logo\"\r\n              />\r\n              Games-Dir\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className=\"ms-auto\">\r\n              {userInfo ? (\r\n                <>\r\n                  {cartItem.game ? (\r\n                    <LinkContainer to={`/overview/${cartItem.game}`}>\r\n                      <Nav.Link>\r\n                        <i className=\"fas fa-shopping-cart\"></i>&nbsp; Cart\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  <NavDropdown\r\n                    title={\r\n                      <>\r\n                        <i className=\"fas fa-user\"></i>&nbsp; {userInfo.name}\r\n                      </>\r\n                    }\r\n                    id=\"username\"\r\n                  >\r\n                    <LinkContainer to=\"/profile\">\r\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <NavDropdown.Item onClick={logoutHandler}>\r\n                      Logout\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i>&nbsp; Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown\r\n                  title={\r\n                    <>\r\n                      <i\r\n                        className=\"fas fa-user\"\r\n                        style={{ color: \"limegreen\" }}\r\n                      ></i>\r\n                      &nbsp; Admin\r\n                    </>\r\n                  }\r\n                  id=\"adminMenu\"\r\n                >\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Manage Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/gamelist\">\r\n                    <NavDropdown.Item>Manage Games</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/genreslist\">\r\n                    <NavDropdown.Item>Manage Genres</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Meta = ({ title, description }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description}></meta>\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: \"Games-Dir\",\r\n  description: \"We sell games\",\r\n};\r\n\r\nexport default Meta;\r\n","import React from \"react\";\r\n\r\nconst Rating = ({ value, text }) => {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span style={{ color: \"gold\" }}>\r\n        <i\r\n          className={\r\n            value >= 1\r\n              ? \"fas fa-star\"\r\n              : value >= 0.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span style={{ color: \"gold\" }}>\r\n        <i\r\n          className={\r\n            value >= 2\r\n              ? \"fas fa-star\"\r\n              : value >= 1.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span style={{ color: \"gold\" }}>\r\n        <i\r\n          className={\r\n            value >= 3\r\n              ? \"fas fa-star\"\r\n              : value >= 2.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span style={{ color: \"gold\" }}>\r\n        <i\r\n          className={\r\n            value >= 4\r\n              ? \"fas fa-star\"\r\n              : value >= 3.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span style={{ color: \"gold\" }}>\r\n        <i\r\n          className={\r\n            value >= 5\r\n              ? \"fas fa-star\"\r\n              : value >= 4.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport { Card, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Rating from \"./Rating\";\r\n\r\nconst Game = ({ game }) => {\r\n  return (\r\n    <Card className=\"mx-1 my-3 bg-light\">\r\n      <Link to={`/game/${game._id}`} style={{ textDecoration: \"none\" }}>\r\n        <Card.Img src={game.image} variant=\"top flush\" />\r\n        <Card.Body>\r\n          <Col>\r\n            <Card.Title as=\"h5\" style={{ textAlign: \"center\" }}>\r\n              <strong>{game.title}</strong>\r\n            </Card.Title>\r\n            <Card.Text as=\"div\" style={{ textAlign: \"center\" }}>\r\n              <Rating value={game.rating} text={`${game.numReviews} reviews`} />\r\n            </Card.Text>\r\n          </Col>\r\n        </Card.Body>\r\n      </Link>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return (\r\n    <Alert style={{ color: \"black\" }} variant={variant}>\r\n      {children}\r\n    </Alert>\r\n  );\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: \"info\",\r\n};\r\n\r\nexport default Message;\r\n","import axios from 'axios'\r\nimport { GAME_LIST_FAIL, GAME_LIST_SUCCESS, GAME_LIST_REQUEST, GAME_DETAILS_REQUEST, GAME_DETAILS_SUCCESS, GAME_DETAILS_FAIL, GAME_DELETE_REQUEST, GAME_DELETE_SUCCESS, GAME_DELETE_FAIL, GAME_GENRE_REQUEST, GAME_GENRE_SUCCESS, GAME_GENRE_FAIL, GAME_CREATE_REQUEST, GAME_CREATE_SUCCESS, GAME_CREATE_FAIL, GAME_UPDATE_REQUEST, GAME_UPDATE_SUCCESS, GAME_UPDATE_FAIL, GAME_CREATE_REVIEW_REQUEST, GAME_CREATE_REVIEW_SUCCESS, GAME_CREATE_REVIEW_FAIL, GAME_LIST_ADMIN_REQUEST, GAME_LIST_ADMIN_SUCCESS, GAME_LIST_ADMIN_FAIL } from '../constatns/gameConstatns'\r\n\r\nexport const listGamesAdmin = (pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GAME_LIST_ADMIN_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/games/paginate?pageNumber=${pageNumber}`);\r\n\r\n        dispatch({\r\n            type: GAME_LIST_ADMIN_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_LIST_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listGames = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GAME_LIST_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/games?keyword=${keyword}`);\r\n\r\n        dispatch({\r\n            type: GAME_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listGamesHomePage = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GAME_LIST_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/games/homepage`);\r\n\r\n        dispatch({\r\n            type: GAME_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listGameDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GAME_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/games/${id}`);\r\n\r\n        dispatch({\r\n            type: GAME_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteGame = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GAME_DELETE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/games/${id}`, config);\r\n\r\n        dispatch({\r\n            type: GAME_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createGame = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GAME_CREATE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/games/`, {}, config);\r\n\r\n        dispatch({\r\n            type: GAME_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getGameGenres = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GAME_GENRE_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/genres');\r\n\r\n        dispatch({\r\n            type: GAME_GENRE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_GENRE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateGame = (game) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GAME_UPDATE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/games/${game._id}`, game, config);\r\n\r\n        dispatch({\r\n            type: GAME_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createGameReview = (gameId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GAME_CREATE_REVIEW_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/games/${gameId}/reviews`, review, config);\r\n\r\n        dispatch({\r\n            type: GAME_CREATE_REVIEW_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GAME_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Meta from \"../components/Meta\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Image,\r\n  Container,\r\n  Carousel as CarouselTop,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport Game from \"../components/Game\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listGamesHomePage } from \"../actions/gameActions\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n\r\nconst HomeScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 5,\r\n      slidesToSlide: 5,\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 4,\r\n      slidesToSlide: 4,\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n      slidesToSlide: 3,\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n      slidesToSlide: 1,\r\n    },\r\n  };\r\n\r\n  const gameList = useSelector((state) => state.gameList);\r\n  const { loading, error, games } = gameList;\r\n  useEffect(() => {\r\n    dispatch(listGamesHomePage());\r\n  }, [dispatch]);\r\n\r\n  const handleViewAll = () => history.push(\"/games\");\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Games-Dir | Home\" />\r\n      <h2 className=\"text-center py-lg-3\">Games under $30</h2>\r\n      <Container>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <>\r\n            <Row className=\"justify-content-center\">\r\n              <Col xs={30}>\r\n                <CarouselTop responsive={responsive}>\r\n                  {games.map(\r\n                    (game) =>\r\n                      game.price < 30 && (\r\n                        <CarouselTop.Item key={game._id}>\r\n                          <Link\r\n                            to={`/game/${game._id}`}\r\n                            style={{ textDecoration: \"none\" }}\r\n                          >\r\n                            <Image\r\n                              src={game.image}\r\n                              alt={game.title}\r\n                              className=\"d-block w-100\"\r\n                              fluid\r\n                            />\r\n                          </Link>\r\n                        </CarouselTop.Item>\r\n                      )\r\n                  )}\r\n                </CarouselTop>\r\n              </Col>\r\n            </Row>\r\n            <Row\r\n              className=\"justify-content-center my-lg-3 py-lg-3 my-3 py-3\"\r\n              style={{ borderTop: \"solid\", borderWidth: \"0.5px\" }}\r\n            >\r\n              <Col style={{ textAlign: \"right\" }}>\r\n                <Button\r\n                  variant=\"outline-light\"\r\n                  className=\"btn-sm\"\r\n                  onClick={handleViewAll}\r\n                >\r\n                  View all\r\n                </Button>\r\n                <Carousel\r\n                  className=\"w-100\"\r\n                  responsive={responsive}\r\n                  renderButtonGroupOutside={true}\r\n                  infinite={true}\r\n                >\r\n                  {games.map((game) => (\r\n                    <Col key={game._id}>\r\n                      <Game game={game} />\r\n                    </Col>\r\n                  ))}\r\n                </Carousel>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport { listGameDetails, createGameReview } from \"../actions/gameActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { GAME_CREATE_REVIEW_RESET } from \"../constatns/gameConstatns\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst GameScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [minReq, setMinReq] = useState([]);\r\n  const [recReq, setRecReq] = useState([]);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const gameReviewCreate = useSelector((state) => state.gameReviewCreate);\r\n  const { success: successGameReview, error: errorGameReview } =\r\n    gameReviewCreate;\r\n\r\n  const gameDetails = useSelector((state) => state.gameDetails);\r\n  const { loading, error, game } = gameDetails;\r\n\r\n  useEffect(() => {\r\n    if (successGameReview) {\r\n      alert(\"Review Submitted!\");\r\n      setRating(0);\r\n      setComment(\"\");\r\n      dispatch({ type: GAME_CREATE_REVIEW_RESET });\r\n    }\r\n    if (!loading) {\r\n      setMinReq(game.minRequirements.toString().split(\"_\"));\r\n      setRecReq(game.recRequirements.toString().split(\"_\"));\r\n    }\r\n    dispatch(listGameDetails(match.params.id));\r\n  }, [dispatch, match, successGameReview, game, loading]);\r\n\r\n  const buyNowHandler = () => {\r\n    if (userInfo) {\r\n      history.push(`/overview/${match.params.id}`);\r\n    } else {\r\n      history.push(`/login?redirect=overview/${game._id}`);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createGameReview(match.params.id, { rating, comment }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title={game.title} />\r\n      <Button\r\n        className=\"btn btn-light my-3\"\r\n        onClick={() => history.goBack()}\r\n        style={{\r\n          textDecoration: \"none\",\r\n        }}\r\n      >\r\n        Go back\r\n      </Button>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row className=\"justify-content-center my-2\">\r\n            <Col md={8} lg={7} xs={12}>\r\n              <Image\r\n                src={game.image}\r\n                alt={game.title}\r\n                style={{ height: \"100%\", width: \"100%\" }}\r\n                fluid\r\n              />\r\n            </Col>\r\n            <Col md={4} sm={4} lg={3} xs={12} className=\"mt-2 mt-lg-4 mt-md-0\">\r\n              <Card bg=\"light\">\r\n                <ListGroup style={{ width: \"100%\" }}>\r\n                  <ListGroup.Item\r\n                    style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}\r\n                  >\r\n                    <Row style={{ textAlign: \"center\" }}>\r\n                      <Col as=\"h5\">Price:</Col>\r\n                      <Col as=\"h5\">\r\n                        <strong>${game.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      as=\"h5\"\r\n                      className=\"mt-3 \"\r\n                      style={{ textAlign: \"center\" }}\r\n                    >\r\n                      <strong>Status:</strong>\r\n                    </Row>\r\n                    <Row as=\"h4\" style={{ textAlign: \"center\" }}>\r\n                      <strong>\r\n                        {game.numberInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\r\n                      </strong>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Button\r\n                        onClick={buyNowHandler}\r\n                        style={{\r\n                          backgroundColor: \"dodgerblue\",\r\n                          borderColor: \"dodgerblue\",\r\n                        }}\r\n                        type=\"button\"\r\n                        disabled={game.numberInStock === 0}\r\n                      >\r\n                        {game.numberInStock > 0 ? \"Buy now\" : \"Out Of Stock\"}\r\n                      </Button>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row\r\n            className=\"justify-content-center my-lg-3 py-lg-3 my-3 py-3\"\r\n            style={{ borderTop: \"solid\", borderWidth: \"0.5px\" }}\r\n          >\r\n            <h2 className=\"text-center\">Description</h2>\r\n            <Col lg={10}>\r\n              <Card bg=\"light\">\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      borderBottom: \"solid\",\r\n                      borderWidth: \"0.5px\",\r\n                    }}\r\n                  >\r\n                    <h3>{game.title}</h3>\r\n                    <h5>Publisher: {game.publisher}</h5>\r\n                    <Rating\r\n                      value={game.rating}\r\n                      text={`${game.numReviews} reviews`}\r\n                    />\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item\r\n                    style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}\r\n                  >\r\n                    <p className=\"px-lg-5\" style={{ whiteSpace: \"pre-line\" }}>\r\n                      {game.description}\r\n                    </p>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row className=\"justify-content-center\">\r\n                      <Col\r\n                        lg={5}\r\n                        style={{ borderRight: \"solid\", borderWidth: \"0.5px\" }}\r\n                      >\r\n                        <ul>\r\n                          <strong>MINIMUM:</strong>\r\n                          {minReq.map((requirement) => (\r\n                            <li key={requirement}>{requirement}</li>\r\n                          ))}\r\n                        </ul>\r\n                      </Col>\r\n                      <Col lg={5}>\r\n                        <ul>\r\n                          <strong>RECOMMENDED:</strong>\r\n                          {recReq.map((requirement) => (\r\n                            <li key={requirement}>{requirement}</li>\r\n                          ))}\r\n                        </ul>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row\r\n            className=\"justify-content-center my-lg-3 py-lg-3 my-3 py-3\"\r\n            style={{ borderTop: \"solid\", borderWidth: \"0.5px\" }}\r\n          >\r\n            <Col lg={6}>\r\n              <h2 className=\"text-center\">Reviews</h2>\r\n              {game.reviews.length === 0 && (\r\n                <Message variant=\"warning\">No Reviews</Message>\r\n              )}\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  {game.reviews.map((review) => (\r\n                    <ListGroup.Item\r\n                      key={review._id}\r\n                      style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}\r\n                    >\r\n                      <h5>{review.name}</h5>\r\n                      <Rating value={review.rating} />\r\n                      <p>{review.createdAt.substring(0, 10)}</p>\r\n                      <p>{review.comment}</p>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                  <ListGroup.Item>\r\n                    <h2>Write a Review</h2>\r\n                    {errorGameReview && (\r\n                      <Message variant=\"danger\">{errorGameReview}</Message>\r\n                    )}\r\n                    {userInfo ? (\r\n                      <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId=\"rating\" className=\"my-3\">\r\n                          <Form.Label>Rating</Form.Label>\r\n                          <Form.Select\r\n                            style={{\r\n                              border: \"1px solid black\",\r\n                              color: \"black\",\r\n                              width: \"50%\",\r\n                            }}\r\n                            value={rating}\r\n                            onChange={(e) => setRating(e.target.value)}\r\n                          >\r\n                            <option value=\"\" style={{ color: \"black\" }}>\r\n                              Select...\r\n                            </option>\r\n                            <option value=\"1\" style={{ color: \"black\" }}>\r\n                              1 - Poor\r\n                            </option>\r\n                            <option value=\"2\" style={{ color: \"black\" }}>\r\n                              2 - Fair\r\n                            </option>\r\n                            <option value=\"3\" style={{ color: \"black\" }}>\r\n                              3 - Good\r\n                            </option>\r\n                            <option value=\"4\" style={{ color: \"black\" }}>\r\n                              4 - Very Good\r\n                            </option>\r\n                            <option value=\"5\" style={{ color: \"black\" }}>\r\n                              5 - Excellent\r\n                            </option>\r\n                          </Form.Select>\r\n                        </Form.Group>\r\n                        <Col>\r\n                          <Form.Group controlId=\"comment\" className=\"my-3\">\r\n                            <Form.Label style={{ color: \"black\" }}>\r\n                              Comment:\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                              style={{\r\n                                border: \"1px solid black\",\r\n                                color: \"black\",\r\n                              }}\r\n                              type=\"text\"\r\n                              placeholder=\"Write a comment...\"\r\n                              value={comment}\r\n                              as=\"textarea\"\r\n                              onChange={(e) => setComment(e.target.value)}\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                        </Col>\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                          Submit\r\n                        </Button>\r\n                      </Form>\r\n                    ) : (\r\n                      <Message>\r\n                        Please{\" \"}\r\n                        <Link\r\n                          to={`/login?redirect=game/${game._id}`}\r\n                          style={{ color: \"black\" }}\r\n                        >\r\n                          Sign in\r\n                        </Link>{\" \"}\r\n                        to write a review\r\n                      </Message>\r\n                    )}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Container, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { autoLogout, login } from \"../actions/userActions\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(login(email, password));\r\n    dispatch(autoLogout());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Meta title=\"Login\" />\r\n      <Row className=\"justify-content-center my-lg-5 my-md-5 my-4\">\r\n        <Col lg={4} md={6}>\r\n          <Card className=\"p-2\" style={{ backgroundColor: \"darkblue\" }}>\r\n            <h1 style={{ textAlign: \"center\" }}>Sign In</h1>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId=\"email\" className=\"my-1\">\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\" className=\"my-1\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group style={{ textAlign: \"center\" }}>\r\n                <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\r\n                  Sign In\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n            <Row className=\"py-2\">\r\n              <Col style={{ textAlign: \"center\" }}>\r\n                New Customer?{\" \"}\r\n                <Link\r\n                  to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n                >\r\n                  Register\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Container, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { register } from \"../actions/userActions\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Meta title=\"Register\" />\r\n      <Row className=\"justify-content-center my-lg-3 my-md-3 my-4\">\r\n        <Col lg={4} md={6}>\r\n          <Card className=\"p-2\" style={{ backgroundColor: \"indigo\" }}>\r\n            <h1 style={{ textAlign: \"center\" }}>Register</h1>\r\n            {message && <Message variant=\"danger\">{message}</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId=\"name\" className=\"my-1\">\r\n                <Form.Label>Username:</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter username\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\" className=\"my-1\">\r\n                <Form.Label>Email Address:</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\" className=\"my-1\">\r\n                <Form.Label>Password:</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"confirmPassword\" className=\"my-1\">\r\n                <Form.Label>Confirm Password:</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group style={{ textAlign: \"center\" }}>\r\n                <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\r\n                  Register\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n            <Row className=\"py-2\">\r\n              <Col style={{ textAlign: \"center\" }}>\r\n                Already have an account?{\" \"}\r\n                <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n                  Sign In\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Paginate = ({\r\n  pages,\r\n  page,\r\n  orders = false,\r\n  games = false,\r\n  users = false,\r\n}) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination variant=\"success\">\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !games\r\n                ? orders\r\n                  ? `/profile/${x + 1}`\r\n                  : users\r\n                  ? `/admin/userlist/${x + 1}`\r\n                  : \"\"\r\n                : `/admin/gamelist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listmyOrders } from \"../actions/orderActions\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst ProfileScreen = ({ location, history, match }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const {\r\n    orders,\r\n    loading: loadingOrders,\r\n    error: errorOrders,\r\n    page,\r\n    pages,\r\n  } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n      } else {\r\n        setName(userInfo.name);\r\n        setEmail(userInfo.email);\r\n      }\r\n      dispatch(listmyOrders(pageNumber));\r\n    }\r\n  }, [history, userInfo, dispatch, user, pageNumber]);\r\n\r\n  const handleOrder = (id) => {\r\n    history.push(`/order/${id}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Meta title={`Profile | ${name}`} />\r\n      <Row className=\"justify-content-center my-lg-5 my-md-5 my-4\">\r\n        <Col\r\n          md={6}\r\n          lg={5}\r\n          style={{ borderRight: \"solid\", borderWidth: \"0.5px\" }}\r\n        >\r\n          <Card className=\"p-2 m-lg-3\" style={{ backgroundColor: \"darkblue\" }}>\r\n            <h2 style={{ textAlign: \"center\" }}>User Profile</h2>\r\n            {message && <Message variant=\"danger\">{message}</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {success && <Message variant=\"success\">Profile Updated</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId=\"name\" className=\"my-1\">\r\n                <Form.Label>Username:</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter username\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\" className=\"my-1\">\r\n                <Form.Label>Email Address:</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\" className=\"my-1\">\r\n                <Form.Label>Password:</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"confirmPassword\" className=\"my-1\">\r\n                <Form.Label>Password:</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group style={{ textAlign: \"center\" }}>\r\n                <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\r\n                  Update\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={7}>\r\n          <h3 style={{ textAlign: \"center\" }}>My Games</h3>\r\n          {loadingOrders ? (\r\n            <Loader />\r\n          ) : errorOrders ? (\r\n            <Message variant=\"danger\">{errorOrders}</Message>\r\n          ) : (\r\n            <Card className=\"p-1\" style={{ backgroundColor: \"darkblue\" }}>\r\n              <Table striped borderless hover responsive className=\"table-sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>NAME</th>\r\n                    <th>TOTAL</th>\r\n                    <th>Purchased on</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {orders.map((order) => (\r\n                    <tr\r\n                      key={order._id}\r\n                      onClick={() => handleOrder(order._id)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      <td>{order.orderItem.title}</td>\r\n                      <td>${order.totalPrice}</td>\r\n                      <td>{order.updatedAt.substring(0, 10)}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n              <Paginate pages={pages} page={page} orders={true} />\r\n            </Card>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from '../constatns/orderConstants';\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listmyOrders = (pageNumber = '') => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders?pageNumber=${pageNumber}`, config);\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItem } = cart;\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\" variant=\"pills\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer\r\n            to={`/login?redirect=overview/${cartItem.game}`}\r\n            className=\"mx-1\"\r\n            style={{ backgroundColor: \"limegreen\" }}\r\n          >\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer\r\n            to={`/overview/${cartItem.game}`}\r\n            className=\"mx-1\"\r\n            style={{ backgroundColor: \"limegreen\" }}\r\n          >\r\n            <Nav.Link>Overview</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Overview</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer\r\n            to=\"/payment\"\r\n            className=\"mx-1\"\r\n            style={{ backgroundColor: \"limegreen\" }}\r\n          >\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer\r\n            className=\"mx-1\"\r\n            to=\"/placeorder\"\r\n            style={{ backgroundColor: \"limegreen\" }}\r\n          >\r\n            <Nav.Link>Place Your Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Your Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useEffect } from \"react\";\r\nimport { Col, Container, Row, Button, Card } from \"react-bootstrap\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst OverviewScreen = ({ match, history }) => {\r\n  const gameId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItem } = cart;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n    history.replace(\"/empty\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      if (gameId) {\r\n        dispatch(addToCart(gameId));\r\n      }\r\n    } else {\r\n      history.push(`/login?redirect=overview/${gameId}`);\r\n    }\r\n  }, [dispatch, gameId, userInfo, history]);\r\n\r\n  const handleGoToPayment = () => {\r\n    history.push(`/payment/${gameId}`);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Meta title={`Cart | ${cartItem.title}`} />\r\n      {cartItem.game ? (\r\n        <>\r\n          <CheckoutSteps step1 step2 />\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg={6} md={9} xs={15}>\r\n              <Card bg=\"light\">\r\n                <Card.Img src={cartItem.image} />\r\n                <Card.Body>\r\n                  <Row\r\n                    className=\"py-2\"\r\n                    style={{\r\n                      borderBottom: \"solid\",\r\n                      borderWidth: \"0.5px\",\r\n                      borderColor: \"black\",\r\n                    }}\r\n                  >\r\n                    <Card.Text\r\n                      as=\"h4\"\r\n                      style={{ color: \"black\", textAlign: \"center\" }}\r\n                    >\r\n                      Price: ${cartItem.price}\r\n                    </Card.Text>\r\n                  </Row>\r\n                  <Row\r\n                    className=\"py-2\"\r\n                    style={{\r\n                      borderBottom: \"solid\",\r\n                      borderWidth: \"0.5px\",\r\n                      borderColor: \"black\",\r\n                    }}\r\n                  >\r\n                    <Card.Text as=\"h5\" style={{ color: \"black\" }}>\r\n                      Important! The activation keys we provide are going to\r\n                      work only on the Steam platform.\r\n                      <br /> You will need a Steam account in order to activate\r\n                      this product.\r\n                    </Card.Text>\r\n                  </Row>\r\n                  <Row className=\"justify-content-center\">\r\n                    <Col lg={7} md={7} xs={10} style={{ textAlign: \"center\" }}>\r\n                      <Button\r\n                        onClick={handleGoToPayment}\r\n                        style={{\r\n                          backgroundColor: \"dodgerblue\",\r\n                          borderColor: \"dodgerblue\",\r\n                        }}\r\n                        className=\"mt-3 w-100\"\r\n                        disabled={cartItem.numberInStock === 0}\r\n                      >\r\n                        {cartItem.numberInStock > 0\r\n                          ? \"Proceed to Payment\"\r\n                          : \"Out Of Stock\"}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"justify-content-center\">\r\n                    <Col lg={7} md={7} xs={10} style={{ textAlign: \"center\" }}>\r\n                      <Button\r\n                        onClick={() => removeFromCartHandler(gameId)}\r\n                        style={{\r\n                          backgroundColor: \"red\",\r\n                          borderColor: \"red\",\r\n                        }}\r\n                        className=\"mt-3 w-100\"\r\n                      >\r\n                        Remove from cart\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OverviewScreen;\r\n","import React from \"react\";\r\nimport { Button, Col, Container, Image, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst EmptyCartScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItem } = cart;\r\n\r\n  if (cartItem.game) {\r\n    history.replace(`/overview/${cartItem.game}`);\r\n  }\r\n  const handleBack = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <>\r\n      <Meta title=\"Empty\" />\r\n      <Container style={{ textAlign: \"center\" }}>\r\n        <Row lg={1} className=\"mt-3 pt-3\">\r\n          <Col>\r\n            <Image src=\"/images/empty.png\" />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-3 justify-content-center\">\r\n          <Col lg={4}>\r\n            <Button variant=\"info\" className=\"w-75\" onClick={handleBack}>\r\n              Back to homepage\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmptyCartScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, Col, Card, Row, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst PaymentScreen = ({ history, match }) => {\r\n  const gameId = match.params.id;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(`/placeorder/${gameId}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!cartItem.game) {\r\n      history.replace(\"/empty\");\r\n    }\r\n  });\r\n\r\n  const { cartItem } = cart;\r\n  return (\r\n    <Container>\r\n      <Meta title=\"Choose Payment\" />\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <Row className=\"justify-content-center\">\r\n        <Col lg={7} xs={15}>\r\n          <Card bg=\"light\">\r\n            <h2\r\n              className=\"pt-3\"\r\n              style={{ color: \"black\", textAlign: \"center\" }}\r\n            >\r\n              Payment method\r\n            </h2>\r\n            <Card.Body>\r\n              <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                  <Form.Label\r\n                    className=\"py-1\"\r\n                    as=\"legend\"\r\n                    style={{ color: \"black\" }}\r\n                  >\r\n                    Select payment method:\r\n                  </Form.Label>\r\n                </Form.Group>\r\n                <Row className=\"py-1\">\r\n                  <Col>\r\n                    <Form.Check\r\n                      style={{ color: \"black\" }}\r\n                      type=\"radio\"\r\n                      label=\"PayPal or Credit Card\"\r\n                      id=\"PayPal\"\r\n                      name=\"paymentMethod\"\r\n                      value=\"PayPal\"\r\n                      checked\r\n                      onChange={(e) => setPaymentMethod(e.taget.value)}\r\n                    ></Form.Check>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"justify-content-center mt-4\">\r\n                  <Col style={{ textAlign: \"center\" }}>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      style={{\r\n                        backgroundColor: \"dodgerblue\",\r\n                        borderColor: \"dodgerblue\",\r\n                      }}\r\n                    >\r\n                      Continue\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Col, Card, Row, ListGroup } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_DETAILS_REQUEST } from \"../constatns/orderConstants\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItem } = cart;\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      dispatch({ type: ORDER_DETAILS_REQUEST });\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n  }, [history, success, order, dispatch]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItem: cartItem,\r\n        paymentMethod: cart.paymentMethod,\r\n        totalPrice: cartItem.price,\r\n      })\r\n    );\r\n  };\r\n\r\n  if (!cartItem.game) {\r\n    history.replace(\"/empty\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Place Order\" />\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n\r\n      <Row className=\"justify-content-center\">\r\n        <Col lg={5} xs={10}>\r\n          <Card variant=\"flush\" bg=\"light\">\r\n            <ListGroup variant=\"flush\" className=\"\">\r\n              <ListGroup.Item\r\n                style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}\r\n              >\r\n                <h2>Overview</h2>\r\n                <h5>\r\n                  <strong>Title: </strong>\r\n                  {cartItem.title}\r\n                </h5>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <h2>Payment Method</h2>\r\n                <h5>\r\n                  <strong>Method: </strong>\r\n                  {cart.paymentMethod}\r\n                </h5>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={4} xs={10} className=\"my-2 my-lg-0 my-md-0\">\r\n          <Card variant=\"flush\" bg=\"light\">\r\n            <ListGroup variant=\"flush\" className=\"\">\r\n              <ListGroup.Item\r\n                style={{\r\n                  borderBottom: \"solid\",\r\n                  borderWidth: \"0.5px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}\r\n              >\r\n                <Row style={{ textAlign: \"center\" }}>\r\n                  <Col as=\"h4\">Total:</Col>\r\n                  <Col as=\"h4\">${cartItem.price}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item style={{ textAlign: \"center\" }}>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  onClick={placeOrderHandler}\r\n                  style={{\r\n                    backgroundColor: \"dodgerblue\",\r\n                    borderColor: \"dodgerblue\",\r\n                  }}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Collapse, Card, Col, Row, Button, Dropdown } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  ORDER_CREATE_RESET,\r\n  ORDER_PAY_RESET,\r\n} from \"../constatns/orderConstants\";\r\nimport { removeFromCart } from \"../actions/cartActions\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [sdkReady, setSdkReady] = useState();\r\n  const orderId = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  let { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || order._id !== orderId) {\r\n      dispatch(getOrderDetails(orderId));\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, order]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult));\r\n    dispatch(removeFromCart(order.orderItem.game));\r\n  };\r\n\r\n  const handleBackToHome = () => {\r\n    history.replace(\"/\");\r\n    dispatch({ type: ORDER_CREATE_RESET });\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <Meta title={`Order | ${order.orderItem.title}`} />\r\n      <Button variant=\"dark\" onClick={handleBackToHome}>\r\n        Back to Homepage\r\n      </Button>\r\n      <Row className=\"justify-content-center\">\r\n        <Col lg={5}>\r\n          <Card style={{ backgroundColor: \"indigo\" }}>\r\n            <Row className=\"justify-content-center\" variant=\"flush\">\r\n              <Col\r\n                lg={10}\r\n                style={{\r\n                  borderBottom: \"solid\",\r\n                  borderWidth: \"0.5px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <h3>Order: {orderId}</h3>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n              <Col\r\n                lg={4}\r\n                className=\"py-2\"\r\n                style={{\r\n                  borderBottom: \"solid\",\r\n                  borderWidth: \"0.5px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                as=\"h5\"\r\n              >\r\n                Product:{\" \"}\r\n              </Col>\r\n              <Col\r\n                lg={6}\r\n                className=\"py-2\"\r\n                style={{\r\n                  borderBottom: \"solid\",\r\n                  borderWidth: \"0.5px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                as=\"h5\"\r\n              >\r\n                {\" \"}\r\n                {order.orderItem.title}{\" \"}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n              <Col\r\n                lg={4}\r\n                className=\"py-2\"\r\n                style={{\r\n                  borderBottom: \"solid\",\r\n                  borderWidth: \"0.5px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                as=\"h5\"\r\n              >\r\n                Account:{\" \"}\r\n              </Col>\r\n              <Col\r\n                lg={6}\r\n                className=\"py-2\"\r\n                style={{\r\n                  borderBottom: \"solid\",\r\n                  borderWidth: \"0.5px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                as=\"h5\"\r\n              >\r\n                {\" \"}\r\n                {order.user.name}{\" \"}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n              <Col\r\n                lg={4}\r\n                className=\"py-2\"\r\n                style={{\r\n                  borderBottom: \"solid\",\r\n                  borderWidth: \"0.5px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                as=\"h5\"\r\n              >\r\n                Price:{\" \"}\r\n              </Col>\r\n              <Col\r\n                lg={6}\r\n                className=\"py-2\"\r\n                style={{\r\n                  borderBottom: \"solid\",\r\n                  borderWidth: \"0.5px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                as=\"h5\"\r\n              >\r\n                {\" \"}\r\n                ${order.orderItem.price}{\" \"}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n              <Col\r\n                lg={4}\r\n                className=\"py-2\"\r\n                style={{\r\n                  borderBottom: \"solid\",\r\n                  borderWidth: \"0.5px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                as=\"h5\"\r\n              >\r\n                Payment Method:{\" \"}\r\n              </Col>\r\n              <Col\r\n                lg={6}\r\n                className=\"py-2\"\r\n                style={{\r\n                  borderBottom: \"solid\",\r\n                  borderWidth: \"0.5px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                as=\"h5\"\r\n              >\r\n                {\" \"}\r\n                {order.paymentMethod}{\" \"}\r\n              </Col>\r\n            </Row>\r\n            {!order.isPaid ? (\r\n              <Row className=\"justify-content-center py-2\">\r\n                <Col lg={11} style={{ textAlign: \"center\" }} as=\"h5\">\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            ) : (\r\n              <Row className=\"justify-content-center py-2\">\r\n                <Col lg={11} style={{ textAlign: \"center\" }} as=\"h5\">\r\n                  <Row className=\"justify-content-center\">\r\n                    <Col\r\n                      lg={8}\r\n                      className=\"py-2\"\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        variant=\"dark\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                        }}\r\n                        onClick={() => setOpen(!open)}\r\n                        aria-controls=\"example-collapse-text\"\r\n                        aria-expanded={open}\r\n                      >\r\n                        Click to see your product key\r\n                      </Button>\r\n                      <Collapse in={open} className=\"my-1\">\r\n                        <Dropdown>\r\n                          <Card.Header>\r\n                            <p>{order.productKey}</p>\r\n                          </Card.Header>\r\n                        </Dropdown>\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { Button, Card, Col, Row, Table } from \"react-bootstrap\";\r\nimport Meta from \"../components/Meta\";\r\nimport Paginate from \"../components/Paginate\";\r\n\r\nconst UserListScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users, pages, page } = userList;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if ((userInfo && userInfo.isAdmin) || successDelete) {\r\n      dispatch(listUsers(pageNumber));\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, userInfo, history, successDelete, pageNumber]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Admin | User List\" />\r\n      <Row\r\n        className=\"my-3\"\r\n        style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}\r\n      >\r\n        <h1 className=\"text-center\">Users</h1>\r\n      </Row>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row className=\"justify-content-center\">\r\n          <Col lg={10} md={15}>\r\n            <Card className=\"p-1\" style={{ backgroundColor: \"darkblue\" }}>\r\n              <Table striped borderless hover responsive className=\"table-md\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>NAME</th>\r\n                    <th>EMAIL</th>\r\n                    <th>ADMIN</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {users.map((user) => (\r\n                    <tr key={user._id}>\r\n                      <td>{user.name}</td>\r\n                      <td>\r\n                        <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                      </td>\r\n                      <td>\r\n                        {user.isAdmin ? (\r\n                          <i\r\n                            className=\"fas fa-check\"\r\n                            style={{ color: \"limegreen\" }}\r\n                          ></i>\r\n                        ) : (\r\n                          <i\r\n                            className=\"fas fa-times\"\r\n                            style={{ color: \"red\" }}\r\n                          ></i>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <LinkContainer\r\n                          to={`/admin/user/${user._id}/edit`}\r\n                          className=\"mx-1\"\r\n                        >\r\n                          <Button variant=\"dark\" className=\"btn-sm\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                          </Button>\r\n                        </LinkContainer>\r\n                        <Button\r\n                          variant=\"danger\"\r\n                          className=\"btn-sm\"\r\n                          onClick={() => deleteHandler(user._id)}\r\n                        >\r\n                          <i className=\"fas fa-trash\"></i>\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n              <Paginate pages={pages} page={page} users={true} />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Container, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constatns/userConstants\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.replace(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [user, dispatch, userId, successUpdate, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Admin | Edit User\" />\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-dark my-3\">\r\n        Go Back\r\n      </Link>\r\n      <Container>\r\n        <Row className=\"justify-content-center my-lg-3 my-md-3 my-4\">\r\n          <Col lg={4} md={6}>\r\n            <Card className=\"p-2\" style={{ backgroundColor: \"indigo\" }}>\r\n              <h1 style={{ textAlign: \"center\" }}>Edit User</h1>\r\n              {loadingUpdate && <Loader />}\r\n              {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n              ) : (\r\n                <Form onSubmit={submitHandler}>\r\n                  <Form.Group controlId=\"name\" className=\"my-1\">\r\n                    <Form.Label>Username:</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter username\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"email\" className=\"my-1\">\r\n                    <Form.Label>Email Address:</Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      placeholder=\"Enter email\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                    <Form.Group controlId=\"isAdmin\" className=\"my-2\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label=\"Is Admin\"\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                      ></Form.Check>\r\n                    </Form.Group>\r\n                  </Form.Group>\r\n                  <Form.Group style={{ textAlign: \"center\" }}>\r\n                    <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\r\n                      Update\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteGame, createGame, listGamesAdmin } from \"../actions/gameActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { Button, Card, Col, Row, Table } from \"react-bootstrap\";\r\nimport {\r\n  GAME_CREATE_RESET,\r\n  GAME_GENRE_RESET,\r\n} from \"../constatns/gameConstatns\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst GameListScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const gameListAdmin = useSelector((state) => state.gameListAdmin);\r\n  const { loading, error, games, page, pages } = gameListAdmin;\r\n\r\n  const gameDelete = useSelector((state) => state.gameDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = gameDelete;\r\n\r\n  const gameCreate = useSelector((state) => state.gameCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    game: createdGame,\r\n  } = gameCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: GAME_CREATE_RESET });\r\n    dispatch({ type: GAME_GENRE_RESET });\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (successCreate) {\r\n      history.push(`/admin/game/${createdGame._id}/edit`);\r\n    } else {\r\n      dispatch(listGamesAdmin(pageNumber));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    userInfo,\r\n    history,\r\n    successDelete,\r\n    successCreate,\r\n    createdGame,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteGame(id));\r\n    }\r\n  };\r\n\r\n  const createGameHandler = () => {\r\n    dispatch(createGame());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Admin | Game List\" />\r\n      <Row\r\n        className=\"my-3\"\r\n        style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}\r\n      >\r\n        <Col className=\"text-center\">\r\n          <h1>Games</h1>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row className=\"justify-content-center\">\r\n          <Col lg={11} md={15}>\r\n            <Card className=\"p-1\" style={{ backgroundColor: \"darkblue\" }}>\r\n              <Table striped borderless hover responsive className=\"table-md\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>TITLE</th>\r\n                    <th>GENRE</th>\r\n                    <th>PRICE</th>\r\n                    <th>STOCK</th>\r\n                    <th>\r\n                      <Button\r\n                        variant=\"warning\"\r\n                        className=\"btn-sm\"\r\n                        onClick={createGameHandler}\r\n                      >\r\n                        <i className=\"fas fa-plus\"></i>&nbsp; Add Game\r\n                      </Button>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {games.map((game) => (\r\n                    <tr key={game._id}>\r\n                      <td>{game.title}</td>\r\n                      <td>{game.genre.name}</td>\r\n                      <td>${game.price}</td>\r\n                      <td>{game.numberInStock}</td>\r\n                      <td>\r\n                        <LinkContainer\r\n                          to={`/admin/game/${game._id}/edit`}\r\n                          className=\"mx-1\"\r\n                        >\r\n                          <Button variant=\"dark\" className=\"btn-sm\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                          </Button>\r\n                        </LinkContainer>\r\n                        <Button\r\n                          variant=\"danger\"\r\n                          className=\"btn-sm\"\r\n                          onClick={() => deleteHandler(game._id)}\r\n                        >\r\n                          <i className=\"fas fa-trash\"></i>\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n              <Paginate pages={pages} page={page} games={true} />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Container, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  getGameGenres,\r\n  listGameDetails,\r\n  updateGame,\r\n} from \"../actions/gameActions\";\r\nimport {\r\n  GAME_GENRE_RESET,\r\n  GAME_UPDATE_RESET,\r\n} from \"../constatns/gameConstatns\";\r\nimport axios from \"axios\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst GameEditScreen = ({ match, history }) => {\r\n  const gameId = match.params.id;\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [genre, setGenre] = useState(\"\");\r\n  const [publisher, setPublisher] = useState(\"\");\r\n  const [numberInStock, setNumberInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [minRequirements, setMinRequirements] = useState(\"\");\r\n  const [recRequirements, setRecRequirements] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const gameDetails = useSelector((state) => state.gameDetails);\r\n  const { loading, error, game } = gameDetails;\r\n\r\n  const gameUpdate = useSelector((state) => state.gameUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = gameUpdate;\r\n\r\n  const gameGenres = useSelector((state) => state.gameGenres);\r\n  const { genres } = gameGenres;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: GAME_UPDATE_RESET });\r\n      dispatch({ type: GAME_GENRE_RESET });\r\n      history.push(\"/admin/gamelist\");\r\n    } else {\r\n      if (!game.title || game._id !== gameId) {\r\n        dispatch(getGameGenres());\r\n        dispatch(listGameDetails(gameId));\r\n      } else {\r\n        setTitle(game.title);\r\n        setPrice(game.price);\r\n        setGenre(game.genre);\r\n        setImage(game.image);\r\n        setPublisher(game.publisher);\r\n        setNumberInStock(game.numberInStock);\r\n        setDescription(game.description);\r\n        setMinRequirements(game.minRequirements);\r\n        setRecRequirements(game.recRequirements);\r\n      }\r\n    }\r\n  }, [game, dispatch, gameId, history, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\"/api/uploads\", formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateGame({\r\n        _id: gameId,\r\n        genre: genre || genre._id,\r\n        title,\r\n        price,\r\n        publisher,\r\n        image,\r\n        numberInStock,\r\n        description,\r\n        minRequirements,\r\n        recRequirements,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Admin | Edit Game\" />\r\n      <Link to=\"/admin/gamelist\" className=\"btn btn-dark my-3\">\r\n        Go Back\r\n      </Link>\r\n      <Container>\r\n        <Row className=\"justify-content-center my-lg-3 my-md-3 my-4\">\r\n          <Col lg={7} md={6}>\r\n            <Card className=\"p-2\" bg=\"dark\">\r\n              <h1 style={{ textAlign: \"center\" }}>Edit Game</h1>\r\n              {loadingUpdate && <Loader />}\r\n              {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n              ) : (\r\n                <Form onSubmit={submitHandler}>\r\n                  <Row className=\"justify-content-center\">\r\n                    <Col className=\"text-right\" lg={5}>\r\n                      <Form.Group controlId=\"title\" className=\"my-1\">\r\n                        <Form.Label>Title:</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder=\"Title...\"\r\n                          value={title}\r\n                          onChange={(e) => setTitle(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"publisher\" className=\"my-1\">\r\n                        <Form.Label>Publisher:</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder=\"Publisher...\"\r\n                          value={publisher}\r\n                          onChange={(e) => setPublisher(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"genre\" className=\"my-2\">\r\n                        <Form.Label>Genre:</Form.Label>\r\n                        <Form.Select onChange={(e) => setGenre(e.target.value)}>\r\n                          {genres.map((g) => (\r\n                            <option key={g._id} value={g._id}>\r\n                              {g.name}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Select>\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col className=\"text-center mx-2\" lg={5}>\r\n                      <Form.Group controlId=\"price\" className=\"my-1\">\r\n                        <Form.Label>Price:</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder=\"Price...\"\r\n                          value={price}\r\n                          onChange={(e) => setPrice(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"numberInStock\" className=\"my-1\">\r\n                        <Form.Label>Stock:</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder=\"Stock...\"\r\n                          value={numberInStock}\r\n                          onChange={(e) => setNumberInStock(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"image\" className=\"my-1\">\r\n                        <Form.Label>Image:</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder=\"Image...\"\r\n                          value={image}\r\n                          onChange={(e) => setImage(e.target.value)}\r\n                        ></Form.Control>\r\n                        <Form.Control\r\n                          type=\"file\"\r\n                          label=\"Choose File\"\r\n                          custom=\"true\"\r\n                          size=\"sm\"\r\n                          onChange={uploadFileHandler}\r\n                        ></Form.Control>\r\n                        {uploading && <Loader />}\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"justify-content-center\">\r\n                    <Col className=\"text-center\" lg={8}>\r\n                      <Form.Group controlId=\"description\" className=\"my-1\">\r\n                        <Form.Label>Description:</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          type=\"text\"\r\n                          placeholder=\"Description...\"\r\n                          value={description}\r\n                          onChange={(e) => setDescription(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"minRequiremens\" className=\"my-1\">\r\n                        <Form.Label>\r\n                          Minimum Requirements: (Use \"_\" betwen component\r\n                          requirements)\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          type=\"text\"\r\n                          placeholder=\"Minimum Requirements...\"\r\n                          value={minRequirements}\r\n                          onChange={(e) => setMinRequirements(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"recRequiremens\" className=\"my-1\">\r\n                        <Form.Label>\r\n                          Recommended Requirements: (Use \"_\" betwen component\r\n                          requirements)\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          type=\"text\"\r\n                          placeholder=\"Recommended Requirements...\"\r\n                          value={recRequirements}\r\n                          onChange={(e) => setRecRequirements(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group style={{ textAlign: \"center\" }}>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          variant=\"primary\"\r\n                          className=\"my-2\"\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Game from \"../components/Game\";\r\nimport { getGameGenres, listGames } from \"../actions/gameActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport useDynamicRefs from \"use-dynamic-refs\";\r\nimport Message from \"../components/Message\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst AllGamesScreen = () => {\r\n  const gameList = useSelector((state) => state.gameList);\r\n  const { loading, error, games } = gameList;\r\n  const [getRef, setRef] = useDynamicRefs();\r\n\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 5,\r\n      slidesToSlide: 5,\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 4,\r\n      slidesToSlide: 4,\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n      slidesToSlide: 3,\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n      slidesToSlide: 1,\r\n    },\r\n  };\r\n\r\n  const gameGenres = useSelector((state) => state.gameGenres);\r\n  const { genres } = gameGenres;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(listGames(\"\"));\r\n    dispatch(getGameGenres());\r\n  }, [dispatch]);\r\n\r\n  const scrollToRef = (ref) => {\r\n    window.scrollTo(0, ref.current.offsetTop);\r\n  };\r\n  const executeScroll = (ref) => scrollToRef(ref);\r\n\r\n  return (\r\n    <div>\r\n      <Meta title=\"Games-Dir | All Games\" />\r\n      {loading && <Loader />}\r\n      {error ? (\r\n        <Message variant=\"danger\">{error.message}</Message>\r\n      ) : (\r\n        <>\r\n          <Row className=\"justify-content-center\">\r\n            <Col className=\"py-lg-4 py-2\">\r\n              <ListGroup horizontal=\"lg\">\r\n                {genres.map((genre) => (\r\n                  <ListGroup.Item\r\n                    onClick={() => executeScroll(getRef(genre))}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      textAlign: \"center\",\r\n                      fontSize: 15,\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                    key={genre._id}\r\n                    action\r\n                    variant=\"dark\"\r\n                  >\r\n                    {genre.name}\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          {genres.map((genre) => (\r\n            <Row\r\n              style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}\r\n              className=\"justify-content-center\"\r\n              ref={setRef(genre)}\r\n              key={genre._id}\r\n            >\r\n              <h4 className=\"text-center py-2\">{genre.name}</h4>\r\n              <Carousel\r\n                className=\"w-100\"\r\n                responsive={responsive}\r\n                renderButtonGroupOutside={true}\r\n                infinite={true}\r\n              >\r\n                {games.map(\r\n                  (game) =>\r\n                    game.genre._id === genre._id && (\r\n                      <Col key={game._id} xs={11}>\r\n                        <Game game={game} />\r\n                      </Col>\r\n                    )\r\n                )}\r\n              </Carousel>\r\n            </Row>\r\n          ))}{\" \"}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllGamesScreen;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst ScrollToTop = (props) => {\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [location]);\r\n\r\n  return <>{props.children}</>;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React, { useEffect } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listGames } from \"../actions/gameActions\";\r\nimport Game from \"../components/Game\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst GameSearch = ({ match }) => {\r\n  const keyword = match.params.keyword;\r\n  const dispatch = useDispatch();\r\n\r\n  const gameList = useSelector((state) => state.gameList);\r\n  const { loading, error, games } = gameList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listGames(keyword));\r\n  }, [dispatch, keyword]);\r\n  return (\r\n    <div>\r\n      <Meta title=\"Games-Dir | Search\" />\r\n      <h3 className=\"text-center\">Your Search Results:</h3>\r\n      {loading && <Loader />}\r\n      {error ? (\r\n        <Message variant=\"danger\">{error.message}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {games.map((game) => (\r\n              <Col lg={3}>\r\n                <Game game={game} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameSearch;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Button, Card, Col, Row, Table } from \"react-bootstrap\";\r\nimport Meta from \"../components/Meta\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { createGenre, deleteGenre, listGenres } from \"../actions/genreActions\";\r\nimport { GENRE_CREATE_RESET } from \"../constatns/genreConstants\";\r\n\r\nconst GenresList = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const genresList = useSelector((state) => state.genresList);\r\n  const { loading, error, genres } = genresList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const genreDelete = useSelector((state) => state.genreDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = genreDelete;\r\n\r\n  const genreCreate = useSelector((state) => state.genreCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    genre: createdGenre,\r\n  } = genreCreate;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: GENRE_CREATE_RESET });\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (successCreate) {\r\n      history.push(`/admin/genreslist/${createdGenre._id}/edit`);\r\n    } else {\r\n      dispatch(listGenres());\r\n    }\r\n  }, [dispatch, userInfo, history, createdGenre, successCreate, successDelete]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (\r\n      window.confirm(\r\n        \"Deleting a genre can result in corruption of data and break the application.\\nOnly delete a genre if you have already deleted all games asociated with the genre.\\n\\nAre you sure you want to delete this genre?\"\r\n      )\r\n    ) {\r\n      dispatch(deleteGenre(id));\r\n    }\r\n  };\r\n\r\n  const createGenreHandler = () => {\r\n    dispatch(createGenre());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Admin | Genres List\" />\r\n      <Row\r\n        className=\"my-3\"\r\n        style={{ borderBottom: \"solid\", borderWidth: \"0.5px\" }}\r\n      >\r\n        <h1 className=\"text-center\">Genres</h1>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row className=\"justify-content-center\">\r\n          <Col lg={4} md={6}>\r\n            <Card className=\"p-1\" style={{ backgroundColor: \"darkblue\" }}>\r\n              <Table striped borderless hover responsive className=\"table-md\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>NAME</th>\r\n                    <th>\r\n                      <Button\r\n                        variant=\"warning\"\r\n                        className=\"btn-sm\"\r\n                        onClick={createGenreHandler}\r\n                      >\r\n                        <i className=\"fas fa-plus\"></i>&nbsp; Add Genre\r\n                      </Button>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {genres.map((genre) => (\r\n                    <tr key={genre._id}>\r\n                      <td>{genre.name}</td>\r\n                      <td>\r\n                        <LinkContainer\r\n                          to={`/admin/genreslist/${genre._id}/edit`}\r\n                          className=\"mx-1\"\r\n                        >\r\n                          <Button variant=\"dark\" className=\"btn-sm\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                          </Button>\r\n                        </LinkContainer>\r\n                        <Button\r\n                          variant=\"danger\"\r\n                          className=\"btn-sm\"\r\n                          onClick={() => deleteHandler(genre._id)}\r\n                        >\r\n                          <i className=\"fas fa-trash\"></i>\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GenresList;\r\n","import { GENRE_CREATE_FAIL, GENRE_CREATE_REQUEST, GENRE_CREATE_SUCCESS, GENRE_DELETE_FAIL, GENRE_DELETE_REQUEST, GENRE_DELETE_SUCCESS, GENRE_DETAILS_FAIL, GENRE_DETAILS_REQUEST, GENRE_DETAILS_SUCCESS, GENRE_LIST_FAIL, GENRE_LIST_REQUEST, GENRE_LIST_SUCCESS, GENRE_UPDATE_FAIL, GENRE_UPDATE_REQUEST, GENRE_UPDATE_SUCCESS } from \"../constatns/genreConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listGenres = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GENRE_LIST_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/genres');\r\n\r\n        dispatch({\r\n            type: GENRE_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GENRE_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createGenre = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GENRE_CREATE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/genres/`, {}, config);\r\n\r\n        dispatch({\r\n            type: GENRE_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GENRE_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateGenre = (genre) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GENRE_UPDATE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/genres/${genre._id}`, genre, config);\r\n\r\n        dispatch({\r\n            type: GENRE_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GENRE_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getGenreDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: GENRE_DETAILS_REQUEST });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/genres/${id}`, config);\r\n\r\n        dispatch({\r\n            type: GENRE_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GENRE_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteGenre = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GENRE_DELETE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/genres/${id}`, config);\r\n\r\n        dispatch({\r\n            type: GENRE_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GENRE_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, Row, Col, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getGenreDetails, updateGenre } from \"../actions/genreActions\";\r\nimport { GENRE_UPDATE_RESET } from \"../constatns/genreConstants\";\r\nimport Meta from \"../components/Meta\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst GenreEditScreen = ({ match, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const genreId = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const genreDetails = useSelector((state) => state.genreDetails);\r\n  const { genre, loading, error } = genreDetails;\r\n\r\n  const genreUpdate = useSelector((state) => state.genreUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = genreUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: GENRE_UPDATE_RESET });\r\n      history.replace(\"/admin/genreslist\");\r\n    } else {\r\n      if (!genre.name || genre._id !== genreId) {\r\n        dispatch(getGenreDetails(genreId));\r\n      } else {\r\n        setName(genre.name);\r\n      }\r\n    }\r\n  }, [genre, dispatch, genreId, successUpdate, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateGenre({ _id: genreId, name }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title=\"Admin | Add/Edit Genre\" />\r\n      <Row className=\"justify-content-center my-lg-5 my-md-5 my-4\">\r\n        <Col lg={4} md={6}>\r\n          <Card className=\"p-2\" style={{ backgroundColor: \"darkblue\" }}>\r\n            <h1 style={{ textAlign: \"center\" }}>Add/Edit Genre</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n            {loading ? (\r\n              <Loader />\r\n            ) : error ? (\r\n              <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n              <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"name\" className=\"my-1\">\r\n                  <Form.Label>Genre Name:</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter genre name..\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group style={{ textAlign: \"center\" }}>\r\n                  <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\r\n                    Submit\r\n                  </Button>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GenreEditScreen;\r\n","import React from \"react\";\r\nimport { Button, Col, Container, Image, Row } from \"react-bootstrap\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst NotFoundScreen = ({ history }) => {\r\n  const handleBack = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <>\r\n      <Meta title=\"Empty\" />\r\n      <Container style={{ textAlign: \"center\" }}>\r\n        <Row lg={1} className=\"mt-3 pt-3\">\r\n          <Col>\r\n            <Image src=\"/images/notFound.png\" className=\"w-25\" />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-3 justify-content-center\">\r\n          <Col lg={4}>\r\n            <Button variant=\"info\" className=\"w-75\" onClick={handleBack}>\r\n              Back to homepage\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFoundScreen;\r\n","import React from 'react';\nimport { Container } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport HomeScreen from './screens/HomeScreen';\nimport GameScreen from './screens/GameScreen'\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport OverviewScreen from './screens/OverviewScreen';\nimport EmptyCartScreen from './screens/EmptyCartScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport GameListScreen from './screens/GameListScreen';\nimport GameEditScreen from './screens/GameEditScreen';\nimport AllGamesScreen from './screens/AllGamesScreen';\nimport ScrollToTop from './components/ScrollToTop';\nimport GameSearch from './screens/GameSearch';\nimport GenresListScreen from './screens/GenresListScreen';\nimport GenreEditScreen from './screens/GenreEditScreen';\nimport NotFoundScreen from './screens/NotFoundScreen';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container bg=\"dark\">\n          <ScrollToTop>\n            <Switch>\n              {/* <Route path=\"/search/:keyword\" component={HomeScreen} exact /> */}\n              <Route path=\"/games/search/:keyword\" component={GameSearch} />\n              <Route path=\"/games\" component={AllGamesScreen} />\n              <Route path=\"/game/:id\" component={GameScreen} />\n              <Route path=\"/overview/:id\" component={OverviewScreen} />\n              <Route path=\"/order/:id\" component={OrderScreen} />\n              <Route path=\"/payment/:id\" component={PaymentScreen} />\n              <Route path=\"/placeorder/:id\" component={PlaceOrderScreen} />\n              <Route path=\"/empty\" component={EmptyCartScreen} />\n              <Route path=\"/profile/:pageNumber\" component={ProfileScreen} exact />\n              <Route path=\"/profile\" component={ProfileScreen} exact />\n              <Route path=\"/login\" component={LoginScreen} />\n              <Route path=\"/register\" component={RegisterScreen} />\n              <Route path=\"/admin/game/:id/edit\" component={GameEditScreen} />\n              <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n              <Route path=\"/admin/gamelist/:pageNumber\" component={GameListScreen} exact />\n              <Route path=\"/admin/gamelist\" component={GameListScreen} exact />\n              <Route path=\"/admin/userlist\" component={UserListScreen} exact />\n              <Route path=\"/admin/genreslist\" component={GenresListScreen} exact />\n              <Route path=\"/admin/genreslist/:id/edit\" component={GenreEditScreen} />\n              <Route path=\"/admin/userlist/:pageNumber\" component={UserListScreen} exact />\n              <Route path=\"/\" component={HomeScreen} exact />\n              <Route path=\"/not-found\" component={NotFoundScreen} exact />\n              <Redirect to=\"/not-found\" />\n            </Switch>\n          </ScrollToTop>\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}